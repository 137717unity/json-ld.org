Introduction
------------

The JSON-LD Test Suite is a set of Web Services, markup and tests that can 
be used to verify JSON-LD Processor conformance to the set of specifications
that constitute JSON-LD. The goal of the suite is to provide an easy and 
comprehensive JSON-LD testing solution for developers creating JSON-LD Processors.

Design
------

The JSON-LD Test suite allows developers to mix and match JSON-LD test manifests, 
JSON-LD processor endpoints and SPARQL endpoints. Processing happens in the
following order:

JSON-LD Test Manifest -> JSON-LD Test Suite -> JSON-LD processor -> SPARQL endpoint

The JSON-LD Test Suite drives the entire process. The first step is to
retrieve the list of tests that should be run for a particular manifest.
Then the JSON-LD test suite uses the processor that was selected to
extract the triples and send those triples, along with what triples are
expected (via a SPARQL query) to the SPARQL endpoint. The end result is a
yes/no on whether the expected triples were extracted by the JSON-LD processor.

Running the Test Suite
----------------------

You can view and run this test suite at the following URL:

http://json-ld.org/test-suite/

Contributing
------------

If you would like to contribute a new test or a fix to an existing test,
please follow these steps:

1. Notify the JSON-LD mailing list, public-linked-json@w3.org, 
   that you will be creating a new test or fix and the purpose of the
   change.
2. Clone the git repository: git@github.com:msporny/json-ld-test-suite.git
3. Make your changes and submit them via github, or via a 'git format-patch'
   to Manu Sporny <msporny@digitalbazaar.com> or to the JSON-LD mailing list.

Optionally, you can ask Manu for direct access to the repository and may make
changes directly to the JSON-LD Test Suite source code. All updates to the test 
suite go live on Digital Bazaar's JSON-LD Test Suite site within seconds of 
committing changes to github via a WebHook call.

How to Add a Unit Test
----------------------

In order to add a unit test, you must follow these steps:
   
1. Pick a new unit test number. For example - 250. To be consistent, please use
   the next available unit test number.
2. Create a markup file in the tests/ directory with a .json extension. 
   For example: tests/250.json
3. Create a SPARQL query file in the tests/ directory with a .sparql extension.
   For example: tests/250.sparql
4. Add your test to manifest.ttl.

There are three classifications for Unit Tests:

required - These are tests that are required for proper operation per the
           JSON-LD specification.
optional - These are tests for optional features supported by some JSON-LD 
           Processors.
buggy    - These are tests that are buggy or are not considered valid test
           cases by all JSON-LD processor maintainers.

The test suite is designed to empower JSON-LD processor maintainers to create
and add tests as they see fit. This may mean that the test suite may become
unstable from time to time, but this approach has been taken so that the 
long-term goal of having a comprehensive test suite for JSON-LD can be achieved
by the JSON-LD community.

