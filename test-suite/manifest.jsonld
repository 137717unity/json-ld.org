{
  "@context": {
    "": "http://www.w3.org/2006/03/test-description#",
    "dc": "http://purl.org/dc/elements/1.1/",
    "jld": "http://json-ld.org/test-suite/vocab#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "@coerce": {
      "@iri": [
        ":classification",
        ":informationResourceInput",
        ":informationResourceResults"
      ]
    }
  },
  "@subject": [
    {
      "@subject": "test-cases/rdf-0001",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0001.jsonld",
      ":informationResourceResults": "test-cases/rdf-0001.sparql",
      ":purpose": "Tests generation of a triple using full URIs and a plain literal.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#plain-literals"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Plain literal with URIs"
    },
    {
      "@subject": "test-cases/rdf-0002",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0002.jsonld",
      ":informationResourceResults": "test-cases/rdf-0002.sparql",
      ":purpose": "Tests generation of a triple using a CURIE defined in the default context.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#iris"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Plain literal with CURIE from default context"
    },
    {
      "@subject": "test-cases/rdf-0003",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0003.jsonld",
      ":informationResourceResults": "test-cases/rdf-0003.sparql",
      ":purpose": "Tests that a BNode is created if no explicit subject is set.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Default subject is BNode"
    },
    {
      "@subject": "test-cases/rdf-0004",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0004.jsonld",
      ":informationResourceResults": "test-cases/rdf-0004.sparql",
      ":purpose": "Tests that a plain literal is created with a language tag.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#language-specification-in-plain-literals"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Literal with language tag"
    },
    {
      "@subject": "test-cases/rdf-0005",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0005.jsonld",
      ":informationResourceResults": "test-cases/rdf-0005.sparql",
      ":purpose": "Tests that a literal may be created using extended characters.",
      ":specificationReference": "",
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Extended character set literal"
    },
    {
      "@subject": "test-cases/rdf-0006",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0006.jsonld",
      ":informationResourceResults": "test-cases/rdf-0006.sparql",
      ":purpose": "Tests creation of a literal with a datatype.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#typed-literals"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Typed literal"
    },
    {
      "@subject": "test-cases/rdf-0007",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0007.jsonld",
      ":informationResourceResults": "test-cases/rdf-0007.sparql",
      ":purpose": "Verify that 'a' is an alias for rdf:type, and the object is created as an IRI.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Tests 'a' generates rdf:type and object is implicit IRI"
    },
    {
      "@subject": "test-cases/rdf-0008",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0008.jsonld",
      ":informationResourceResults": "test-cases/rdf-0008.sparql",
      ":purpose": "Generate an IRI using a prefix defined within an @context.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test prefix defined in @context"
    },
    {
      "@subject": "test-cases/rdf-0009",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0009.jsonld",
      ":informationResourceResults": "test-cases/rdf-0009.sparql",
      ":purpose": "The empty string may be used to define the default prefix.",
      ":specificationReference": "",
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test using default prefix"
    },
    {
      "@subject": "test-cases/rdf-0010",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0010.jsonld",
      ":informationResourceResults": "test-cases/rdf-0010.sparql",
      ":purpose": "A property referencing an associative array gets object from subject of array.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test object processing defines object"
    },
    {
      "@subject": "test-cases/rdf-0011",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0011.jsonld",
      ":informationResourceResults": "test-cases/rdf-0011.sparql",
      ":purpose": "If no @ is specified, a BNode is created, and will be used as the object of an enclosing property.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test object processing defines object with implicit BNode"
    },
    {
      "@subject": "test-cases/rdf-0012",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0012.jsonld",
      ":informationResourceResults": "test-cases/rdf-0012.sparql",
      ":purpose": "Tests that Multiple Objects are for a Single Property using array syntax.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#multiple-objects-for-a-single-property"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Multiple Objects for a Single Property"
    },
    {
      "@subject": "test-cases/rdf-0013",
      ":classification": ":optional",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0013.jsonld",
      ":informationResourceResults": "test-cases/rdf-0013.sparql",
      ":purpose": "Tests that [[]] generates an empty list.",
      ":specificationReference": "If the value is a regular array, should we support RDF List/Sequence generation of triples?",
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Creation of an empty list"
    },
    {
      "@subject": "test-cases/rdf-0014",
      ":classification": ":optional",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0014.jsonld",
      ":informationResourceResults": "test-cases/rdf-0014.sparql",
      ":purpose": "Tests that [[a]] generates list.",
      ":specificationReference": "If the value is a regular array, should we support RDF List/Sequence generation of triples?",
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Creation of a list with single element"
    },
    {
      "@subject": "test-cases/rdf-0015",
      ":classification": ":optional",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0015.jsonld",
      ":informationResourceResults": "test-cases/rdf-0015.sparql",
      ":purpose": "Tests that list with multiple elements.",
      ":specificationReference": "If the value is a regular array, should we support RDF List/Sequence generation of triples?",
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Creation of a list with multiple elements"
    },
    {
      "@subject": "test-cases/rdf-0016",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0016.jsonld",
      ":informationResourceResults": "test-cases/rdf-0016.sparql",
      ":purpose": "Tests using @base in @context for IRI processing.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test @base"
    },
    {
      "@subject": "test-cases/rdf-0017",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0017.jsonld",
      ":informationResourceResults": "test-cases/rdf-0017.sparql",
      ":purpose": "Tests using @vocab in @context for IRI processing.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test @vocab"
    },
    {
      "@subject": "test-cases/rdf-0018",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0018.jsonld",
      ":informationResourceResults": "test-cases/rdf-0018.sparql",
      ":purpose": "Tests using @base and @vocab in @context for IRI processing.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test @base and @vocab together"
    },
    {
      "@subject": "test-cases/rdf-0019",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0019.jsonld",
      ":informationResourceResults": "test-cases/rdf-0019.sparql",
      ":purpose": "Tests coercion of object to anyURI when specified.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#type-coercion"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test type coercion to anyURI"
    },
    {
      "@subject": "test-cases/rdf-0020",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0020.jsonld",
      ":informationResourceResults": "test-cases/rdf-0020.sparql",
      ":purpose": "Tests coercion of object to a typed literal when specified.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#type-coercion"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test type coercion to typed literal"
    },
    {
      "@subject": "test-cases/rdf-0021",
      ":classification": ":buggy",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0021.jsonld",
      ":informationResourceResults": "test-cases/rdf-0021.sparql",
      ":purpose": "Tests that a decimal value generates a xsd:decimal typed literal (buggy test).",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#automatic-typing"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test coercion of decimal value"
    },
    {
      "@subject": "test-cases/rdf-0022",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0022.jsonld",
      ":informationResourceResults": "test-cases/rdf-0022.sparql",
      ":purpose": "Tests that a decimal value generates a xsd:double typed literal;.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#automatic-typing"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test coercion of double value"
    },
    {
      "@subject": "test-cases/rdf-0023",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0023.jsonld",
      ":informationResourceResults": "test-cases/rdf-0023.sparql",
      ":purpose": "Tests that a decimal value generates a xsd:integer typed literal.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#automatic-typing"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test coercion of integer value"
    },
    {
      "@subject": "test-cases/rdf-0024",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/rdf-0024.jsonld",
      ":informationResourceResults": "test-cases/rdf-0024.sparql",
      ":purpose": "Tests that a decimal value generates a xsd:boolean typed literal.",
      ":specificationReference": {
        "@iri": "http://json-ld.org/spec/latest/#automatic-typing"
      },
      "@type": [
        "jld:SPARQLTest",
        ":TestCase"
      ],
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test coercion of boolean value"
    }
  ]
}
