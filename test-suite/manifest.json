{
  "@context": {
    "": "http://www.w3.org/2006/03/test-description#",
    "dc": "http://purl.org/dc/elements/1.1/",
    "@coerce": {
      "xsd:anyURI": [
        ":classification",
        ":informationResourceInput",
        ":informationResourceResults"
      ]
    }
  },
  "@": [
    {
      "@": "test-cases/0001",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Plain literal with URIs",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0001.json",
      ":informationResourceResults": "test-cases/0001n.json",
      ":purpose": "Tests generation of a triple using full URIs and a plain literal.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#plain-literals"
      }
    },
    {
      "@": "test-cases/0002",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Plain literal with CURIE from default context",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0002.json",
      ":informationResourceResults": "test-cases/0002n.json",
      ":purpose": "Tests generation of a triple using a CURIE defined in the default context.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#iris"
      }
    },
    {
      "@": "test-cases/0003",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Default subject is BNode",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0003.json",
      ":informationResourceResults": "test-cases/0003n.json",
      ":purpose": "Tests that a BNode is created if no explicit subject is set.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      }
    },
    {
      "@": "test-cases/0004",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Literal with language tag",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0004.json",
      ":informationResourceResults": "test-cases/0004n.json",
      ":purpose": "Tests that a plain literal is created with a language tag.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#language-specification-in-plain-literals"
      }
    },
    {
      "@": "test-cases/0005",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Extended character set literal",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0005.json",
      ":informationResourceResults": "test-cases/0005n.json",
      ":purpose": "Tests that a literal may be created using extended characters.",
      ":specificationReference": ""
    },
    {
      "@": "test-cases/0006",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Typed literal",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0006.json",
      ":informationResourceResults": "test-cases/0006n.json",
      ":purpose": "Tests creation of a literal with a datatype.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#typed-literals"
      }
    },
    {
      "@": "test-cases/0007",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Tests 'a' generates rdf:type and object is implicit IRI",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0007.json",
      ":informationResourceResults": "test-cases/0007n.json",
      ":purpose": "Verify that 'a' is an alias for rdf:type, and the object is created as an IRI.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      }
    },
    {
      "@": "test-cases/0008",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test prefix defined in @context",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0008.json",
      ":informationResourceResults": "test-cases/0008n.json",
      ":purpose": "Generate an IRI using a prefix defined within an @context.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      }
    },
    {
      "@": "test-cases/0009",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test using default prefix",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0009.json",
      ":informationResourceResults": "test-cases/0009n.json",
      ":purpose": "The empty string may be used to define the default prefix.",
      ":specificationReference": ""
    },
    {
      "@": "test-cases/0010",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test object processing defines object",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0010.json",
      ":informationResourceResults": "test-cases/0010n.json",
      ":purpose": "A property referencing an associative array gets object from subject of array.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      }
    },
    {
      "@": "test-cases/0011",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test object processing defines object with implicit BNode",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0011.json",
      ":informationResourceResults": "test-cases/0011n.json",
      ":purpose": "If no @ is specified, a BNode is created, and will be used as the object of an enclosing property.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      }
    },
    {
      "@": "test-cases/0012",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Multiple Objects for a Single Property",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0012.json",
      ":informationResourceResults": "test-cases/0012n.json",
      ":purpose": "Tests that Multiple Objects are for a Single Property using array syntax.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#multiple-objects-for-a-single-property"
      }
    },
    {
      "@": "test-cases/0013",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Creation of an empty list",
      ":classification": ":optional",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0013.json",
      ":informationResourceResults": "test-cases/0013n.json",
      ":purpose": "Tests that [[]] generates an empty list.",
      ":specificationReference": "If the value is a regular array, should we support RDF List/Sequence generation of triples?"
    },
    {
      "@": "test-cases/0014",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Creation of a list with single element",
      ":classification": ":optional",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0014.json",
      ":informationResourceResults": "test-cases/0014n.json",
      ":purpose": "Tests that [[a]] generates list.",
      ":specificationReference": "If the value is a regular array, should we support RDF List/Sequence generation of triples?"
    },
    {
      "@": "test-cases/0015",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Creation of a list with multiple elements",
      ":classification": ":optional",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0015.json",
      ":informationResourceResults": "test-cases/0015n.json",
      ":purpose": "Tests that list with multiple elements.",
      ":specificationReference": "If the value is a regular array, should we support RDF List/Sequence generation of triples?"
    },
    {
      "@": "test-cases/0016",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test @base",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0016.json",
      ":informationResourceResults": "test-cases/0016n.json",
      ":purpose": "Tests using @base in @context for IRI processing.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      }
    },
    {
      "@": "test-cases/0017",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test @vocab",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0017.json",
      ":informationResourceResults": "test-cases/0017n.json",
      ":purpose": "Tests using @vocab in @context for IRI processing.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      }
    },
    {
      "@": "test-cases/0018",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test @base and @vocab together",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0018.json",
      ":informationResourceResults": "test-cases/0018n.json",
      ":purpose": "Tests using @base and @vocab in @context for IRI processing.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#the-json-ld-processing-algorithm"
      }
    },
    {
      "@": "test-cases/0019",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test type coercion to anyURI",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0019.json",
      ":informationResourceResults": "test-cases/0019n.json",
      ":purpose": "Tests coercion of object to anyURI when specified.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#type-coercion"
      }
    },
    {
      "@": "test-cases/0020",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test type coercion to typed literal",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0020.json",
      ":informationResourceResults": "test-cases/0020n.json",
      ":purpose": "Tests coercion of object to a typed literal when specified.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#type-coercion"
      }
    },
    {
      "@": "test-cases/0021",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test coercion of decimal value",
      ":classification": ":buggy",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0021.json",
      ":informationResourceResults": "test-cases/0021n.json",
      ":purpose": "Tests that a decimal value generates a xsd:decimal typed literal (buggy test).",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#automatic-typing"
      }
    },
    {
      "@": "test-cases/0022",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test coercion of double value",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0022.json",
      ":informationResourceResults": "test-cases/0022n.json",
      ":purpose": "Tests that a decimal value generates a xsd:double typed literal;.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#automatic-typing"
      }
    },
    {
      "@": "test-cases/0023",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test coercion of integer value",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0023.json",
      ":informationResourceResults": "test-cases/0023n.json",
      ":purpose": "Tests that a decimal value generates a xsd:integer typed literal.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#automatic-typing"
      }
    },
    {
      "@": "test-cases/0024",
      "a": ":TestCase",
      "dc:contributor": "Gregg Kellogg",
      "dc:title": "Test coercion of boolean value",
      ":classification": ":required",
      ":expectedResults": true,
      ":informationResourceInput": "test-cases/0024.json",
      ":informationResourceResults": "test-cases/0024n.json",
      ":purpose": "Tests that a decimal value generates a xsd:boolean typed literal.",
      ":specificationReference": {
        "iri": "http://json-ld.org/spec/latest/#automatic-typing"
      }
    }
  ]
}
